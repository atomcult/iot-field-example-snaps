name: qt-local-snap
base: core20
version: '0.1'
summary: Single-line elevator pitch for your amazing snap
description: |
  This is my-snap's description. You have a paragraph or two to tell the
  most important story about your snap. Keep it under 100 words though,
  we live in tweetspace and your description wants to look good in the snap
  store.

grade: stable
confinement: strict

parts:
  imx-gpu-viv:
    plugin: nil
    override-pull: |
      if [ "${SNAPCRAFT_TARGET_ARCH}" = "armhf" ]; then
        export WGET_ARCH="aarch32"
      elif [ "${SNAPCRAFT_TARGET_ARCH}" = "arm64" ]; then
        export WGET_ARCH="aarch64"
      else
        echo "not supported!"
        exit -1
      fi
      wget https://www.nxp.com/lgfiles/NMG/MAD/YOCTO/imx-gpu-viv-6.4.0.p2.4-${WGET_ARCH}.bin \
        -O ${SNAPCRAFT_PART_SRC}/imx-gpu-viv.bin
      chmod a+x ${SNAPCRAFT_PART_SRC}/imx-gpu-viv.bin
      ${SNAPCRAFT_PART_SRC}/imx-gpu-viv.bin --auto-accept --force
    override-build: |
      cp -r ${SNAPCRAFT_PART_BUILD}/imx-gpu-viv-*/gpu-core/{etc,usr} \
        ${SNAPCRAFT_PART_INSTALL}/
      # Remove broken symlinks
      unlink ${SNAPCRAFT_PART_INSTALL}/usr/lib/libvulkan.so
      unlink ${SNAPCRAFT_PART_INSTALL}/usr/lib/libvulkan.so.1
      # Remove execute bit
      chmod a-x ${SNAPCRAFT_PART_INSTALL}/usr/lib/lib*.so*
      chmod a-x ${SNAPCRAFT_PART_INSTALL}/usr/lib/dri/*.so
  qtbase:
    after:
      - imx-gpu-viv
    plugin: nil
    source: https://github.com/qt/qtbase.git
    source-tag: v5.6.3
    source-depth: 1
    build-environment:
      - PATH: "/usr/lib/ccache:${PATH}"
    stage-packages:
      # Qt needs a lot of dev packages from the target arch to build
      # Normally these would go in build-packages but Qt does a lot of
      # cross-compilation for feature detection
      - libglvnd-dev
      - libdrm-dev
      - libicu-dev
      - libc-dev
      - libcrypt-dev
      - libssl-dev
      - libpcre2-dev
      - libdbus-1-dev
      - libc6
      - libbsd0
      - libglvnd0
      - libdrm2
      - libicu66
      - libcrypt1
      - libdbus-1-3
    override-pull: |
      snapcraftctl pull
      patch -p1 < ${SNAPCRAFT_PROJECT_DIR}/patches/0001-Add-linux-imx8-g++.patch
    override-build: |
      if [ "${SNAPCRAFT_TARGET_ARCH}" = "armhf" ]; then
        export DEVICE="linux-imx6-g++"
      elif [ "${SNAPCRAFT_TARGET_ARCH}" = "arm64" ]; then
        export DEVICE="linux-imx8-g++"
      else
        echo "not supported!"
        exit -1
      fi

      cp -r ${SNAPCRAFT_PART_BUILD}/../../imx-gpu-viv/install/usr \
        ${SNAPCRAFT_PART_INSTALL}/

      # Unset all snapcraft build variables so they don't interfere
      unset LD
      unset CC
      unset CXX
      unset CFLAGS
      unset CXXFLAGS
      unset LDFLAGS

      ./configure -debug -nomake tests -nomake examples -opensource -confirm-license \
        -prefix /usr/local/qt5 -sysroot ${SNAPCRAFT_PART_INSTALL} \
        -opengl es2 -no-pulseaudio -qpa eglfs -no-xcb -no-kms -no-directfb -no-linuxfb \
        -device ${DEVICE} -device-option CROSS_COMPILE=${SNAPCRAFT_ARCH_TRIPLET}- \
        -no-alsa -no-audio-backend -no-openssl -no-use-gold-linker -v

      make -j$(nproc)

      make install
    stage:
      - usr/local/qt5


build-packages:
  - cmake
  - build-essential
  - perl
  - python3
  - g++-${SNAPCRAFT_ARCH_TRIPLET}
  - gcc-${SNAPCRAFT_ARCH_TRIPLET}
  - binutils-${SNAPCRAFT_ARCH_TRIPLET}
