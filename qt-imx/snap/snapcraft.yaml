name: qt-imx
base: core20
version: '5.6.3'
summary: Qt application libraries for i.MX 6 & 8 SoCs
description: |
  Qt application libraries compiled with support for the eglfs backend on i.MX
  6 & 8 SoCs.

  Users can either use this snap in `stage-snaps` to utilise the prebuilt
  libraries for their application, or extend this snap by adding the appropriate build steps.

  The Qt libraries are available in the /usr/local/qt5 directory in the snap.

  As part of the build process, the GPU library binaries for the SoCs are
  downloaded, extracted, and added to the snap. It's assumed you know what
  you're doing, license-wise, if you're using and/or distributing this snap.

grade: stable
confinement: strict

parts:
  imx-gpu-viv:
    plugin: nil
    build-packages:
      - wget
    override-pull: |
      if [ "${SNAPCRAFT_TARGET_ARCH}" = "armhf" ]; then
        export WGET_ARCH="aarch32"
      elif [ "${SNAPCRAFT_TARGET_ARCH}" = "arm64" ]; then
        export WGET_ARCH="aarch64"
      else
        echo "not supported!"
        exit -1
      fi
      wget https://www.nxp.com/lgfiles/NMG/MAD/YOCTO/imx-gpu-viv-6.2.4.p4.0-${WGET_ARCH}.bin \
        -O ${SNAPCRAFT_PART_SRC}/imx-gpu-viv.bin
      chmod a+x ${SNAPCRAFT_PART_SRC}/imx-gpu-viv.bin
      ${SNAPCRAFT_PART_SRC}/imx-gpu-viv.bin --auto-accept --force
    override-build: |
      cp -r ${SNAPCRAFT_PART_BUILD}/imx-gpu-viv-*/gpu-core/usr \
        ${SNAPCRAFT_PART_INSTALL}/
      install -D -m 0644 ${SNAPCRAFT_PART_BUILD}/imx-gpu-viv-*/gpu-core/etc/Vivante.icd \
        ${SNAPCRAFT_PART_INSTALL}/etc/OpenCL/vendors/Vivante.icd
      # Remove execute bit
      chmod a-x ${SNAPCRAFT_PART_INSTALL}/usr/lib/lib*.so*
      chmod a-x ${SNAPCRAFT_PART_INSTALL}/usr/lib/dri/*.so
  qtbase:
    after:
      - imx-gpu-viv
    plugin: nil
    source: https://github.com/qt/qtbase.git
    source-tag: v5.6.3
    source-depth: 1
    build-environment:
      - PATH: /usr/lib/ccache:${PATH}
      - on amd64:
        - DEVICE_OPTIONS: "-device-option CROSS_COMPILE=${SNAPCRAFT_ARCH_TRIPLET}-"
      - else:
        - DEVICE_OPTIONS: ""
    stage-packages:
      # Qt needs a lot of dev packages from the target arch to build
      # Normally these would go in build-packages but Qt does a lot of
      # cross-compilation for feature detection
      - libglvnd-dev
      - libdrm-dev
      - libicu-dev
      - libc-dev
      - libcrypt-dev
      - libssl-dev
      - libpcre2-dev
      - libdbus-1-dev
      - libc6
      - libbsd0
      - libglvnd0
      - libdrm2
      - libicu66
      - libcrypt1
      - libdbus-1-3
      - libffi7
      - libgcc-s1
    override-pull: |
      snapcraftctl pull
      patch -p1 < ${SNAPCRAFT_PROJECT_DIR}/patches/0001-Added-linux-imx8-g.patch
      patch -p1 < ${SNAPCRAFT_PROJECT_DIR}/patches/0002-Adjust-library-names-in-eglfs-viv-test.patch
      patch -p1 < ${SNAPCRAFT_PROJECT_DIR}/patches/0003-Adjust-library-names-for-linux-imx6-g.patch
    override-build: |
      if [ "${SNAPCRAFT_TARGET_ARCH}" = "armhf" ]; then
        export DEVICE="linux-imx6-g++"
      elif [ "${SNAPCRAFT_TARGET_ARCH}" = "arm64" ]; then
        export DEVICE="linux-imx8-g++"
      else
        echo "not supported!"
        exit -1
      fi

      cp -r ${SNAPCRAFT_PART_BUILD}/../../imx-gpu-viv/install/usr \
        ${SNAPCRAFT_PART_INSTALL}/

      # Unset all snapcraft build variables so they don't interfere
      unset LD
      unset CC
      unset CXX
      unset CFLAGS
      unset CXXFLAGS
      unset LDFLAGS

      ./configure -v -debug -nomake tests -nomake examples -opensource -confirm-license \
        -prefix /usr -sysroot ${SNAPCRAFT_PART_INSTALL} \
        -opengl es2 -no-pulseaudio -qpa eglfs -no-xcb -no-kms -no-directfb -no-linuxfb \
        -device ${DEVICE} ${DEVICE_OPTIONS} \
        -no-alsa -no-audio-backend -no-openssl -no-use-gold-linker -pkg-config

      make -j$(nproc)

      make install
    stage:
      - -lib
      - -usr/doc
    prime:
      - -usr/include
  hello-world:
    after:
      - qtbase
    plugin: nil
    source: hello-world
    override-build: |
      ${SNAPCRAFT_PROJECT_DIR}/parts/qtbase/install/usr/bin/qmake
      make -j$(nproc)
      make INSTALL_ROOT=${SNAPCRAFT_PART_INSTALL} install

apps:
  hello-world:
    command: opt/hello-world/bin/hello-world
    environment:
      QT_PLUGIN_PATH: $SNAP/usr/plugins
    plugs:
      - opengl
      - hardware-observe

build-packages:
  - cmake
  - build-essential
  - perl
  - python3
  - pkg-config
  - ccache
  - on amd64:
    - g++-${SNAPCRAFT_ARCH_TRIPLET}
    - gcc-${SNAPCRAFT_ARCH_TRIPLET}
    - binutils-${SNAPCRAFT_ARCH_TRIPLET}
  - else:
    - g++

layout:
  /etc/glvnd:
    bind: $SNAP/etc/glvnd
  /usr/share/X11/xkb:
    bind: $SNAP/usr/share/X11/xkb
  /usr/share/fonts:
    bind: $SNAP/usr/share/fonts
  /usr/share/glvnd:
    bind: $SNAP/usr/share/glvnd
  /usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/dri:
    bind: $SNAP/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/dri
  /usr/share/libdrm:
    bind: $SNAP/usr/share/libdrm
